% !TEX root = conan.tex
% --------------------------------------------------------------------------
% the ConAn package
% 
%   Typeset Conversation Analysis
% 
% --------------------------------------------------------------------------
% Clemens Horch
% Web:    https://github.com/clorch/conan/
% E-Mail: mail@clemenshorch.de
% --------------------------------------------------------------------------
% Copyright (c) 2015 Clemens Horch
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy 
% of this software and associated documentation files (the "Software"), to deal 
% in the Software without restriction, including without limitation the rights 
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
% copies of the Software, and to permit persons to whom the Software is 
% furnished to do so, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in 
% all copies or substantial portions of the Software.
% 
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
% FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
% DEALINGS IN THE SOFTWARE.
%
%--------------------------------------------------------------

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{conan}[2015/02/07 Conversation Analysis Formatting]

\RequirePackage{xstring}
\RequirePackage{calc}
\RequirePackage{kvoptions}
\RequirePackage{setspace}
\RequirePackage{keyval}

%
% Package options
%
\DeclareBoolOption{tt}
\DeclareBoolOption{singlebracket}
\DeclareBoolOption{linenumbers}
\DeclareStringOption[1]{spacing}[1]

\ProcessKeyvalOptions*


%
% Options for the conan environment
%
\newcommand*\@conanMaxSpeaker{A}
\define@key{conan}{speaker}{\renewcommand*\@conanMaxSpeaker{#1}}

\newcommand*\@conanMaxLine{1}
\define@key{conan}{maxline}{\renewcommand*\@conanMaxLine{#1}}

\newif\if@hasMarkers
\@hasMarkersfalse
\define@key{conan}{marker}[]{\@hasMarkerstrue}


%
% Lengths and counters
%
\newcommand{\conanmarker}{$\rightarrow$}

\newlength\@SpeakerWidth%
\newlength\@LineNumberWidth%
\newlength\@MarkerWidth%
\setlength\@MarkerWidth{\widthof{\conanmarker}}%

\newcounter{@SimulCnt}

\newcounter{conanline}
\setcounter{conanline}{1}%


%
% Formatting macros
%
\newcommand{\@lineNo}{\ifconan@linenumbers\scriptsize\theconanline & \fi}
\newcommand{\@marker}[1]{\if@hasMarkers\IfSubStr{#1}{>>}{\conanmarker}{} & \fi}
\newcommand{\@text}[1]{\StrSubstitute{#1}{>> }{>>}[\x]\StrSubstitute{\x}{>>}{}}
\newcommand{\@speaker}[1]{\IfStrEq{#1}{}{}{#1:}}


%
% Environment definitions
%
\newenvironment{conan}[1][]%
{\noindent%
	\ignorespaces%
	\setkeys{conan}{#1}%
	\setlength\@SpeakerWidth{\widthof{\@conanMaxSpeaker:}}%
	\setlength\@LineNumberWidth{\widthof{\scriptsize\@conanMaxLine}}%
	\refstepcounter{equation}%
	\begin{spacing}{\conan@spacing}%
	\begin{list}{(\theequation)}{%
		\setlength{\listparindent}{0pt}%
		\def\makelabel##1{##1\hfil}%  % put labels flushleft in space available
	}%
	\item \begin{minipage}[t]{\linewidth}}
{\end{minipage}%
	\end{list}%
	\end{spacing}%
	\setcounter{conanline}{1}%
	\par\noindent%
	\ignorespacesafterend}
	
\newenvironment{conan*}[1][]%
{\noindent%
	\ignorespaces%
	\setkeys{conan}{#1}%
	\setlength\@SpeakerWidth{\widthof{\@conanMaxSpeaker:}}%
	\setlength\@LineNumberWidth{\widthof{\scriptsize\@conanMaxLine}}%
	\begin{spacing}{\conan@spacing}%
	\begin{list}{}{%
		\setlength{\listparindent}{0pt}%
		\def\makelabel##1{##1\hfil}%  % put labels flushleft in space available
	}%
	\item }
{\end{list}%
	\end{spacing}%
	\setcounter{conanline}{1}%
	\par\noindent%
	\ignorespacesafterend}


%
% Helper macros
%
\newenvironment{@vartab}[1]
{%
\begin{tabular}[t]{@{}%
	\if@hasMarkers p{\@MarkerWidth}@{ }\fi %
	\ifconan@linenumbers p{\@LineNumberWidth}@{ }\fi %
	p{\@SpeakerWidth}@{ } *{#1}{l@{ }l@{ }} l@{}}%
}
{\end{tabular}}

\newcommand{\@simulline}[1]{{%
	\StrSubstitute{#1}{>>}{}[\x]%
	\StrSubstitute{\x}{[}{\string& [}[\x]%
	\StrSubstitute{\x}{]}{\string& ]}[\x]%
	\tokenize{\x}{\x}%
	\expandafter}\x%
}

\newcommand{\@simullineA}[1]{{%
	\StrSubstitute{#1}{>>}{}[\x]%
	\StrSubstitute{\x}{[}{\string& \string~}[\x]%
	\StrSubstitute{\x}{]}{\string& \string~}[\x]%
	\tokenize{\x}{\x}%
	\expandafter}\x%
}

\newcommand{\@simullineB}[1]{{%
	\StrSubstitute{#1}{>>}{}[\x]%
	\StrSubstitute{\x}{[}{\string& \string\raisebox{0.7em}{[}}[\x]%
	\StrSubstitute{\x}{]}{\string& \string\raisebox{0.7em}{]}}[\x]%
	\tokenize{\x}{\x}%
	\expandafter}\x%
}

\newcommand{\@simultab}[5]{%
	\begin{@vartab}{#5}
		\@marker{#2} \@lineNo \@speaker{#1} & \@simulline{#2} \stepcounter{conanline} \\
		\@marker{#4} \@lineNo \@speaker{#3} & \@simulline{#4} \stepcounter{conanline}
	\end{@vartab}\newline
}

\newcommand{\@simultabSingle}[5]{%
	\begin{@vartab}{#5}
		\@marker{#2} \@lineNo \@speaker{#1} & \@simullineA{#2} \stepcounter{conanline} \\[-0.5em]
		\@marker{#4} \@lineNo \@speaker{#3} & \@simullineB{#4} \stepcounter{conanline}
	\end{@vartab}\newline
}

\newcommand{\simul}[4]{\ifconan@tt\ttfamily\fi%
	\StrCount{#2}{[}[\@SimulCntA]
	\StrCount{#2}{]}[\@SimulCntB]
	\setcounter{@SimulCnt}{\@SimulCntA}
	\addtocounter{@SimulCnt}{\@SimulCntB}
	\ifconan@singlebracket%
		\@simultabSingle{#1}{#2}{#3}{#4}{\the@SimulCnt}%
	\else%
		\@simultab{#1}{#2}{#3}{#4}{\the@SimulCnt}%
	\fi%
} 

\newcommand{\alone}[2]{\ifconan@tt\ttfamily\fi%
	\begin{tabular}[t]{@{} %
		\if@hasMarkers p{\@MarkerWidth}@{ }\fi%
		\ifconan@linenumbers p{\@LineNumberWidth}@{ }\fi%
		p{\@SpeakerWidth}@{ }l}%
			\@marker{#2} \@lineNo \@speaker{#1} & \@text{#2} \stepcounter{conanline}
	\end{tabular}\newline%
}

\endinput